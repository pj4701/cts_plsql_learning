Table: Users 
+-------------+---------+ 
| Column Name | Type | 
+-------------+---------+ 
| user_id | int | | user_name | varchar |
+-------------+---------+
user_id is the primary key (column with unique values) for this table. 
Each row of this table contains the name and the id of a user. 
Table: 
Register
+-------------+---------+ 
| Column Name | Type | 
+-------------+---------+ 
| contest_id | int | | user_id | int | 
+-------------+---------+ 
(contest_id, user_id) is the primary key (combination of columns with unique values) for this table. 
Each row of this table contains the id of a user and the contest they registered into. 
Write a solution to find the percentage of the users registered in each contest rounded to two decimals. 
Return the result table ordered by percentage in descending order. 
In case of a tie, order it by contest_id in ascending order. 
The result format is in the following example. 
Example 1: 
Input: Users table: 
+---------+-----------+ 
| user_id | user_name | 
+---------+-----------+ 
| 6 | Alice | | 2 | Bob | | 7 | Alex |
+---------+-----------+ 
Register table: 
+------------+---------+ 
| contest_id | user_id | 
+------------+---------+ 
| 215 | 6 | 
| 209 | 2 | 
| 208 | 2 | 
| 210 | 6 | 
| 208 | 6 | 
| 209 | 7 | 
| 209 | 6 | 
| 215 | 7 | 
| 208 | 7 | 
| 210 | 2 | 
| 207 | 2 | 
| 210 | 7 |
+------------+---------+ 
Output:
+------------+------------+ 
| contest_id | percentage | 
+------------+------------+ 
| 208 | 100.0 |
| 209 | 100.0 |
| 210 | 100.0 |
| 215 | 66.67 | 
| 207 | 33.33 | 
+------------+------------+ 
Explanation: All the users registered in contests 208, 209, and 210. T
he percentage is 100% and we sort them in the answer table by contest_id in ascending order. 
Alice and Alex registered in contest 215 and the percentage is ((2/3) * 100) = 66.67% Bob registered in contest 207 and the percentage is ((1/3) * 100) = 33.33%


the solution for the above 

select contest_id,round(count(user_id)*100/(select count(user_id) from Users),2) percentage
from Register a 
group by contest_id
order by percentage desc,contest_id
-- best response time 

-- wrong answer tried 
-- select contest_id ,(count(distinct r.user_id)*100/count(u.user_id)) as percentage 
-- from register r
-- join users u 
-- on r.user_id = u.user_id  
-- group by r.contest_id 
-- order by percentage \
copilot answer 
SELECT 
    r.contest_id,
    ROUND((COUNT(DISTINCT r.user_id) * 100.0) / (SELECT COUNT(*) FROM Users), 2) AS percentage
FROM 
    Register r
GROUP BY 
    r.contest_id
ORDER BY 
    percentage DESC, r.contest_id ASC;

Explanation:
Subquery for Total Users: The subquery (SELECT COUNT(*) FROM Users) calculates the total number of users directly within the main query.
Main Query: The main query groups the Register table by contest_id and counts the distinct user_id for each contest. It then calculates the percentage by dividing this count by the total number of users and multiplying by 100. The result is rounded to two decimal places.
Ordering: The results are ordered by percentage in descending order and by contest_id in ascending order in case of ties.
